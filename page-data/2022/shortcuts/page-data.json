{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2022/shortcuts/",
    "result": {"data":{"site":{"siteMetadata":{"title":"vcolavin"}},"markdownRemark":{"id":"54db0ea3-f91a-59d7-85fe-2e7372b26f12","excerpt":"For most developers, the practice of software development is, at a basic level, typing. There are other ways of interacting with the computer, such as voice…","html":"<p>For most developers, the practice of software development is, at a basic level, typing. There are other ways of interacting with the computer, such as voice recognition software, which can be especially useful for disabled people. I am not an expert in that, though, so I will focus on the keyboard.</p>\n<p>So while programming <em>is</em> typing, typing is not the <em>point</em> of programming. As such, many developers learn to interact efficiently with computers via keyboard shortcuts, bypassing the mouse as much as possible. This may seem like a marginal and pointless task at first (it did to me!), but building flow and fluency with the medium becomes more valuable over time.</p>\n<p>If you are a new programmer, do not try to learn and incorporate all of these at once! It took years for me to add these to my repertoire, and I am still learning.</p>\n<p>Real quick glossary, the key combinations that make up a shortcut can be called <em>chords</em>, which I think sounds cool. And if holding down a key modifies the behavior of another key or chord, it is called a <em>modifier key</em>. The shift key is a modifier that everyone knows; it turns lower case letters into upper case letters.</p>\n<p>I will start with a list of the most useful that you can get started with right away, and then delve into an exhaustive list. Note that these are the shortcuts that work out of the box on a fresh install of MacOS. A lot of them will work for Windows as well, replacing command with the Windows key or control.</p>\n<p>I also use some custom shortcuts for specific programming tasks that I will not list here. I tend to prefer doing shortcuts with just my left hand, so sometimes I’ll remap an existing shortcut to enable that. For example, <code class=\"language-text\">cmd + p</code> in VSCode opens the fuzzy finder, but I’ve remapped it to <code class=\"language-text\">cmd + t</code>.</p>\n<p>Note: Sometimes, adding shift to a shortcut chord will do the shortcut in the opposite direction. For example, <code class=\"language-text\">cmd + tab</code> selects the next application, and <code class=\"language-text\">cmd + shift + tab</code> selects the previous application. I won’t list this shift modifier exhaustively.</p>\n<h2>Most useful shortcuts (start here!)</h2>\n<table>\n<thead>\n<tr>\n<th>Shortcut</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">cmd + tab</code></td>\n<td>Switch apps. Hold down <code class=\"language-text\">cmd</code> and tap <code class=\"language-text\">tab</code> to keep moving.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + space</code></td>\n<td>Open Spotlight search</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + p</code></td>\n<td>Open fuzzy finder in VSCode</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">up/down arrow</code></td>\n<td>Move through command history in terminal</td>\n</tr>\n</tbody>\n</table>\n<h2>Global shortcuts for MacOS</h2>\n<p>These work in the global MacOS context.</p>\n<table>\n<thead>\n<tr>\n<th>Shortcut</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">cmd + tab</code></td>\n<td>Switch apps. Hold down <code class=\"language-text\">cmd</code> and tap <code class=\"language-text\">tab</code> to keep moving.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + tilde</code></td>\n<td>Switch windows in current app</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + space</code></td>\n<td>Open Spotlight search</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + w</code></td>\n<td>Close current window or tab</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + q</code></td>\n<td>Quit current application</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + +/-</code></td>\n<td>Zoom in/out</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + ,</code></td>\n<td>Open current app preferences or settings</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + shift + 4</code></td>\n<td>Take a screenshot</td>\n</tr>\n</tbody>\n</table>\n<h2>Terminal</h2>\n<p>I still don’t really know the difference between <code class=\"language-text\">ctrl + d</code> and <code class=\"language-text\">ctrl + c</code>, but mashing one or both will reliably end a process in terminal.</p>\n<table>\n<thead>\n<tr>\n<th>Shortcut</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">ctrl + c</code></td>\n<td>End current program</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">ctrl + d</code></td>\n<td>End current program</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">ctrl + a</code></td>\n<td>Move cursor to beginning of the line</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">up/down arrow</code></td>\n<td>move through command history</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">tab</code></td>\n<td>Autocomplete current file or command</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + t</code></td>\n<td>Open new tab</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + shift + [</code></td>\n<td>Move one tab left</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + shift + ]</code></td>\n<td>Move one tab right</td>\n</tr>\n</tbody>\n</table>\n<h2>Text editing stuff</h2>\n<p>These work for most text editing contexts, like VSCode, SublimeText, Google Docs, or any old text box on a web page. They will not work in the terminal, vim, or emacs.</p>\n<p>Note that holding shift while doing any cursor movement (word-by-word or line-by-line) will select as you go. This can be powerful for copying large blocks of text.</p>\n<table>\n<thead>\n<tr>\n<th>Shortcut</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">shift + direction key</code></td>\n<td>select text in that direction</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + direction key</code></td>\n<td>move the cursor all the way in that direction</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">option + left/right arrow</code></td>\n<td>move one word to the left/right</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + a</code></td>\n<td>select all the text</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + c</code></td>\n<td>copy selection to clipboard</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + v</code></td>\n<td>paste clipboard contents</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + z</code></td>\n<td>undo</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + s</code></td>\n<td>save</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + f</code></td>\n<td>find on page</td>\n</tr>\n</tbody>\n</table>\n<p>The following are specific to VSCode and similar code editors.</p>\n<table>\n<thead>\n<tr>\n<th>Shortcut</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">cmd + shift + z</code> or <code class=\"language-text\">cmd + y</code></td>\n<td>redo</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + d</code></td>\n<td>select next instance of current selection</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + click</code></td>\n<td>place new cursor</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + shift + f</code></td>\n<td>open global find</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + shift + e</code></td>\n<td>open and close file tree sidebar</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + p</code></td>\n<td>open fuzzy finder</td>\n</tr>\n</tbody>\n</table>\n<h2>Browser</h2>\n<p>I could write a whole series of articles on the importance of tab navigation, including its role in accessibility and discoverability. In short, it’s very important and useful, but two of the main browsers have it disabled by default. Make sure you enable it!</p>\n<ol>\n<li>\n<p><strong>Safari</strong></p>\n<p>Safari Preferences > Advanced > Press Tab to highlight each item on a webpage.</p>\n<p>While you’re in the advanced menu, select “Show full website address” and “Show Develop menu in menu bar”. This will make web development in Safari much easier.</p>\n</li>\n<li>\n<p><strong>Firefox</strong></p>\n<p>System Preferences > Keyboard > Shortcuts > Use keyboard navigation to move focus between controls (at the bottom of the window)</p>\n</li>\n<li>\n<p><strong>Chrome</strong></p>\n<p>Tab navigation is enabled by default in Chrome.</p>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Shortcut</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">tab</code></td>\n<td>focus next focusable element (see note above)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + t</code></td>\n<td>open new tab</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + w</code></td>\n<td>close current tab</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + shift + t</code></td>\n<td>reopen most recently closed tab</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + l</code></td>\n<td>focus URL bar</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + shift + [</code></td>\n<td>move one tab left</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + shift + ]</code></td>\n<td>move one tab right</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + left/right arrow</code></td>\n<td>go back/forward</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">cmd + option + i</code></td>\n<td>open/close dev tools</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">escape</code> (in dev tools)</td>\n<td>open/close JS console</td>\n</tr>\n</tbody>\n</table>","frontmatter":{"title":"Shortcuts I use a lot","date":"February 19, 2022","description":"They're not critical, but they are extremely useful."}},"previous":{"fields":{"slug":"/2021/the-only-true-thing/"},"frontmatter":{"title":"The Only True Things"}},"next":null},"pageContext":{"id":"54db0ea3-f91a-59d7-85fe-2e7372b26f12","previousPostId":"3a198f35-0bd0-5f95-aed6-38bdfb249cda","nextPostId":null}},
    "staticQueryHashes": ["2841359383","3257411868"]}