{"data":{"site":{"siteMetadata":{"title":"vcolavin","author":"Vincent Colavin"}},"markdownRemark":{"id":"c9f1c9c9-a7d0-5432-91c2-9d4be8d59de6","excerpt":"I’m coming towards the end of an interview cycle, and I thought I’d compile the code questions I’ve been asked over the years. At least, the ones I can remember…","html":"<p>I’m coming towards the end of an interview cycle, and I thought I’d compile the code questions I’ve been asked over the years. At least, the ones I can remember. If and when I find myself interviewing again I’ll update this list.</p>\n<p>I’m only including code and code-adjacent questions here, but of course there’s also been a lot of “tell me about a time you had a conflict with a coworker”, “what is your perfect day at work”, and “where do you see yourself in five years” type questions.</p>\n<p>These questions are all in JavaScript unless otherwise noted, but I was often given the choice of language.</p>\n<h2>Esri (2019)</h2>\n<ul>\n<li>\n<p>What does this code do?:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">blah</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">blah</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Write a function which accepts an array of strings and logs them out in order, with a one-second delay between them. I went over this in more detail in my <a href=\"./../promise-chaining\">promise chaining</a> post.</p>\n</li>\n<li>\n<p>Write a function which accepts an array of numbers and filters out the odds</p>\n</li>\n<li>\n<p>Assuming the <code class=\"language-text\">Array.prototype.filter</code> method doesn’t exist, monkeypatch the Array prototype to create your own version called <code class=\"language-text\">filt</code>.</p>\n</li>\n<li>\n<p>Write a function which accepts a string and checks if it is a palindrome.</p>\n</li>\n<li>\n<p>What sorts of layout issues might occur when internationalizing an app, and what CSS rules might you apply to mitigate those issues?</p>\n</li>\n</ul>\n<h2>SurveyMonkey (2019)</h2>\n<ul>\n<li>Write a function which tells you if a certain search term exists in a given array, assuming that array in unsorted.</li>\n<li>Write the above function assuming the array is sorted (basically, implement binary search).</li>\n<li>What happens when you press ‘enter’ in the browser’s address bar?</li>\n</ul>\n<h2>Mozilla (2019)</h2>\n<p>Mozilla mostly asked higher-level questions which don’t require coding.</p>\n<ul>\n<li>What happens when you press ‘enter’ in the address bar?</li>\n<li>What are some things you might check for if you’re auditing JavaScript code for security?</li>\n<li>What triggers a DOM repaint?</li>\n<li>What are the advantages and disadvantages of single page apps versus server-rendered apps.</li>\n<li>What is <code class=\"language-text\">undefined</code> in JavaScript?</li>\n</ul>\n<h2>Periscopic (2017)</h2>\n<ul>\n<li>\n<p>Implement an algorithm that accepts an array of numeric ranges <code class=\"language-text\">[start, end]</code> and returns an array where any that are overlapping have been merged. E.g.,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">mergeOverlaps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => [[1,3], [5,7], [9,11]]</span>\n<span class=\"token function\">mergeOverlaps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => [9,11], [1,7]]</span>\n<span class=\"token function\">mergeOverlaps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => [[1,11]]</span></code></pre></div>\n</li>\n<li>\n<p>Describe the algorithm that an elevator uses to decide what floor to go to, assuming there is a single elevator in the building. The interviewer asked specifically about <a href=\"https://en.wikipedia.org/wiki/Starvation_(computer_science)\">how to prevent “starvation”</a>, where the algorithm might indefinitely ignore a person calling the elevator.</p>\n</li>\n<li>\n<p>Estimate how many delivery drivers FedEx needs to employ to serve the city of Portland.</p>\n</li>\n<li>\n<p>Given a function which draws a line between two points, e.g.,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">drawLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Write a function which draws a dashed line between two points, e.g.,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">drawDashedLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\tto<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\tdashLength<span class=\"token punctuation\">:</span> n<span class=\"token punctuation\">,</span>\n\tgapLength<span class=\"token punctuation\">:</span> m\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h2>FocusVision (2015)</h2>\n<p>I don’t remember much about this interview, except that they asked me to write <a href=\"https://github.com/vcolavin/video-upload-example\">an entire video upload and encoding application</a> that I spent a huge amount of time on.</p>\n<ul>\n<li>\n<p>Using Ruby, write a function which iterates over an array of strings and returns a hash that counts the occurence of each string. The hash should be of the form:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">  <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'hello'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'test'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'string3'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">6</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h2>Dev Bootcamp (2013)</h2>\n<p>DBC is long-closed, but they did ask one tricky question during the application.</p>\n<ul>\n<li>Imagine a pair of cubes which sit on your desk and can be rotated to display the current day of the month. These cubes <a href=\"http://www.houseofideas.de/WebRoot/Store11/Shops/63830914/5125/EFEF/3210/1C41/C8A1/C0A8/28BB/98A3/IMG_4434-1.JPG\">exist in real life</a>. Given that each cube only has six faces, what numbers does each cube need in order to represent every number from 01 to 31?</li>\n</ul>","frontmatter":{"title":"Coding Interview Questions I've Been Asked","date":"May 02, 2019","description":"A compendium of code questions I've been asked. At least, the ones I can remember."}}},"pageContext":{"slug":"/2019/interview-questions/","previous":{"fields":{"slug":"/2019/promise-chaining/"},"frontmatter":{"title":"Chaining Arbitrary Promises in JavaScript"}},"next":{"fields":{"slug":"/2019/trump-election/"},"frontmatter":{"title":"Was Trump's Election Somehow a Positive Thing?"}}}}